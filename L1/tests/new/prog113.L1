// O(log n) modulo 3 

(:go
    (:go
        0 0
        rdi <- -41
        mem rsp -8 <- :test1
        call :mod3 1
        :test1

        rdi <- 234
        mem rsp -8 <- :test2
        call :mod3 1
        :test2

        rdi <- 0
        mem rsp -8 <- :test3
        call :mod3 1
        :test3

        rdi <- -310
        mem rsp -8 <- :test4
        call :mod3 1
        :test4
        return
    )
    (:encode
        1 0
        rdi <<= 1
        rdi += 1
        rax <- rdi
        return
    )
    (:mod3 
        1 0
        
        cjump 0 < rdi :positive
        r10 <- rdi 
        rdi <- 0
        rdi -= r10
        rdi <<= 1
        
        :positive
        :loop 
        cjump rdi < 3 :return
        
        r10 <- rdi
        r10 &= 3
        cjump r10 = 3 :shift
        cjump r10 = 0 :shift
        rdi -= 3
        goto :loop

        :shift
        rdi >>= 2
        goto :loop

        :return
        mem rsp -8 <- :encode_ret
        call :encode 1
        :encode_ret
        rdi <- rax
        call print 1
        return
    ) 
)

